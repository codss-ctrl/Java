package qu;

public class Qu3_3 {//Qu3_3 클래스가 메서드 영역에 로드되며 클래스 메서드인 main()가 함께 로드된다. 클래스 변수는 없다.
	public static void main(String[] args){//클래스 메서드인 main()이 호출되며 콜스택영역에 로드된다.
		// 8. MethodTest클래스의 add01메서드를 호출 하여라.//
		MethodTest.add01();//MethodTest 클래스를 메서드 영역에 로드한다. 클래스 메서드인 add01()를 클래스명.메서드명() 형식으로 호출하여 콜스택에 add01()을 로드한다.로드된 add01()의 지역변수 result에 클래스 변수 a와 b의 합을 대입한다. result를 출력하여 콘솔에 30을 입력하고 메서드는 종료된다. 
		// 9. MethodTest클래스의 add02메서드를 호출 하여라.
		MethodTest.add02(0);//메서드 영역에 로드되어 있는 MethodTest에서 클래스 메서드인 add02()를 클래스명.메서드명() 형식으로 호출하여 콜스택에 add02(0)을 로드한다. 로드된 add02(0)의 매개변수 c에 인자값 0을 대입하고 지역번수 result1에 클래스 변수 a와b, 인자값 0의 합을 대입하여 값을 반환한다. 
		// 10. MethodTest클래스의 add03메서드를 호출 하여라.
		MethodTest a1 = new MethodTest();//MethodTest 클래스를 참조변수 a1으로 인스턴스화하여 힙영역에 a1주소지를 생성하고, 콜스택에 로드된 main()에 지역변수 a1는 선언하고 힙영역의 a1 주소지를 참고한다.
		a1.add03(0);//힙영역의 a1주소지의 인스턴스 메서드인 add03()를 인스턴스명.메서드명() 형식으로 호출하여 콜스택에 인자값 0을 대입하여 로드한다. 지역변수로 선언된 result2에 전역변수 c와 매개변수로 받은 0의 합이 대입된다. 메서드 종료 후 콜스택에서 add03()메서드는 나간다.
		// 11. MethodTest클래스의 add04메서드를 호출 하여라.
		a1.add04();//힙영역의 a1 주소지의 인스턴스 메서드인 add04() 인스턴스명.메서드명() 형식으로 호출하여 콜스택에 로드한다. 지역변수로 선언된 result3에 전역변수 c와 0부터 100까지의 사이의 난수를 합한 값을 대입한다.
	}
}

class MethodTest {//메서드 영역에 MethodTest 클래스를 로드하고 클래스 변수와 클래스 메서드를 같이 로드한다.
	// 1. 클래스변수 a를 선언하고 10의 값으로 초기화 하여라.
	static int a = 10;//MethodTest 클래스를 로드와 함께 클래스 변수 a를 10으로 초기화하여 메서드 영역에 로드한다.
	// 2. 클래스변수 b를 선언하고 20의 값으로 초기화 하여라.
	static int b = 20;//MethodTest 클래스를 로드와 함께 클래스 변수 b를 20으로 초기화하여 메서드 영역에 로드한다.
	// 3. 인스턴스변수 c를 선언하고 50의 값으로 초기화 하여라.
	int c = 50;//힙영역에 인스턴스 변수 c를 50으로 초기화하여 로드한다.
	
	// 4. 클래스변수 a와 b의 합을 출력하는 클래스메서드 add01를 구현 하여라.
	static void add01(){//메서드 영역에 클래스 메서드 add01()를 로드한다. 매개변수는 없으며 값을 반환하지 않아 반환값의 타입 대신 void를 쓴다.
		int result = a+b;//호출 시 콜스택 영역에서 add01()의 지역변수 result를 로드하고 클래스 변수 a와 b의 합을 대입한다. 
		System.out.println(result);//return으로 값을 반환하지 않고 출력한다.
	}//}를 만나 메서드가 종료된다.
	// 5. 클래스변수 a, b, int 타입의 매개변수 c의 합을 반환하는 클래스메서드 add02()를
	// 구현 하여라.
	static int add02(int c){//메서드 영역에 클래스 메서드 add02()를 로드한다.매개변수는 int 타입 c 이며 반환값은 int 타입이므로 메서드명 앞에 int를 쓴다.
		int result1 = a+b+c;//메서드가 호출되고 콜스택에 로드되었을 때 지역변수인 result1가 로드하고 클래스 변수인 a,b와 매개변수로 받은 c값의 합을 대입한다.
		return result1; //result1의 값을 리턴하고 메서드가 종료된다.
	}
	// 6. 인스턴스변수 c와 int 타입의 매개변수 c의 합을 반환하는 인스턴스메서드 add03를
	// 구현 하여라.
	int add03(int c){//힙영역에 로드되는 인스턴스 메서드로 매개변수는 int 타입 c이며 반환값이 int 타입이므로 메서드명 앞에 int를 쓴다.
		int result2 = this.c + c;//MethodTest 클래스 인스턴스화 후 메서드가 호출되어 콜스택에 로드되었을때 지역변수로 선언된 result2에 전역변수 c와 매개변수로 받은 c의 합이 대입된다.
		return result2; //result2의 값을 반환하고 메서드가 종료된다.
	}
	// 7. 인스턴스변수 c와 0~100사이의 임의의 정수의 합을 출력하는 인스턴스메서드 add04
	// 를 구현 하여라.
	void add04(){//힙영역에 인스턴스 메서드 add04()를 로드한다. 매개변수는 없으며 반환값이 없어 반환타입을 적지않고 void를 적는다.
		int result3 = c + (int)Math.random()*101;//MehtodTest 클래스 인스턴스화 후 add04()가 호출되어 콜스택에 로드되었을 때 지역변수로 선언된 result3에 전역변수 c와 0부터 100까지의 사이의 난수를 합한 값을 대입한다.
		System.out.println(result3);//값을 반환하지 않아 return을 생략하였으며 값을 출력한다.
	}//}를 만나 메서드가 종료된다.
}